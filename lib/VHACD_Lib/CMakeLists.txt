set( HACD_INCLUDR_DIR ${CMAKE_CURRENT_SOURCE_DIR}/public )

option(USE_OPENCL "Using OpenCL" OFF)
option(USE_OPENMP "Using OpenMP" OFF)

if(USE_OPENCL)
    include(FindOpenCL)
    if (OpenCL_FOUND)
        include_directories("${OpenCL_INCLUDE_DIRS}")
        add_definitions( -DOPENCL_FOUND=1 )
        add_definitions( -DOPENCL_CL_FILES="${PROJECT_CL_FILES}" )
    endif()
endif()
if(USE_OPENMP)
    if(NOT APPLE)
        include(FindOpenMP)
        if(OPENMP_FOUND)
            set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
        endif()
    endif()
endif()

set(LIB_TYPE "STATIC" CACHE STRING "STATIC, SHARED or MODULE?")
message("[VHACD] \t LIB_TYPE " ${LIB_TYPE})

file(GLOB PROJECT_CL_FILES "cl/*")
file(GLOB PROJECT_INC_FILES "inc/*")
file(GLOB PROJECT_PUBLIC_FILES "public/*")
file(GLOB PROJECT_SRC_FILES "src/*")

include_directories( "${CMAKE_CURRENT_SOURCE_DIR}/inc" )
add_library(VHACD_LIB ${LIB_TYPE} ${PROJECT_CL_FILES} ${PROJECT_INC_FILES} ${PROJECT_PUBLIC_FILES} ${PROJECT_SRC_FILES})

message("[VHACD] \t -> CMAKE_INSTALL_PREFIX " ${CMAKE_INSTALL_PREFIX})
install(TARGETS VHACD_LIB DESTINATION bin)
install(FILES ${PROJECT_PUBLIC_FILES} DESTINATION include)
install(FILES ${PROJECT_INC_FILES} DESTINATION include)

